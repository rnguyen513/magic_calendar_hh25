---
description: Project Structure
globs: 
alwaysApply: true
---
## **Project Structure & Tree Overview**  

This is the **high-level folder structure** of our project, along with explanations of key files and directories.

```
├── LICENSE
├── README.md
├── ai
│   ├── actions.ts
│   ├── custom-middleware.ts
│   └── index.ts
├── app
│   ├── (auth)
│   │   ├── actions.ts
│   │   ├── api
│   │   │   └── auth
│   │   │       └── [...nextauth]
│   │   │           └── route.ts
│   │   ├── auth.config.ts
│   │   ├── auth.ts
│   │   ├── login
│   │   │   └── page.tsx
│   │   └── register
│   │       └── page.tsx
│   ├── (chat)
│   │   ├── api
│   │   │   ├── chat
│   │   │   │   └── route.ts
│   │   │   ├── files
│   │   │   │   └── upload
│   │   │   │       └── route.ts
│   │   │   ├── history
│   │   │   │   └── route.ts
│   │   │   └── reservation
│   │   │       └── route.ts
│   │   ├── chat
│   │   │   └── [id]
│   │   │       └── page.tsx
│   │   ├── opengraph-image.png
│   │   ├── page.tsx
│   │   └── twitter-image.png
│   ├── favicon.ico
│   ├── globals.css
│   └── layout.tsx
├── components
│   ├── custom
│   │   ├── auth-form.tsx
│   │   ├── chat.tsx
│   │   ├── history.tsx
│   │   ├── icons.tsx
│   │   ├── markdown.tsx
│   │   ├── message.tsx
│   │   ├── multimodal-input.tsx
│   │   ├── navbar.tsx
│   │   ├── overview.tsx
│   │   ├── preview-attachment.tsx
│   │   ├── submit-button.tsx
│   │   ├── theme-provider.tsx
│   │   ├── theme-toggle.tsx
│   │   ├── use-scroll-to-bottom.ts
│   │   ├── use-window-size.tsx
│   │   └── weather.tsx
│   ├── flights
│   │   ├── authorize-payment.tsx
│   │   ├── boarding-pass.tsx
│   │   ├── create-reservation.tsx
│   │   ├── flight-status.tsx
│   │   ├── list-flights.tsx
│   │   ├── select-seats.tsx
│   │   └── verify-payment.tsx
│   └── ui
│       ├── alert-dialog.tsx
│       ├── button.tsx
│       ├── dropdown-menu.tsx
│       ├── input.tsx
│       ├── label.tsx
│       ├── sheet.tsx
│       └── textarea.tsx
├── components.json
├── db
│   ├── migrate.ts
│   ├── queries.ts
│   └── schema.ts
├── drizzle.config.ts
├── lib
│   ├── drizzle
│   │   ├── 0000_absurd_joshua_kane.sql
│   │   └── meta
│   │       ├── 0000_snapshot.json
│   │       └── _journal.json
│   └── utils.ts
├── middleware.ts
├── next-env.d.ts
├── next.config.mjs
├── package.json
├── pnpm-lock.yaml
├── postcss.config.mjs
├── public
│   ├── fonts
│   │   ├── geist-mono.woff2
│   │   └── geist.woff2
│   └── images
│       ├── demo-thumbnail.png
│       └── gemini-logo.png
├── tailwind.config.ts
└── tsconfig.json
```

---

## **Folder & File Explanations**  

### **1. Core Directories**
- **`/ai`**  
  - Contains AI-related logic.
  - `actions.ts`: Handles AI interactions.
  - `custom-middleware.ts`: Middleware for processing AI requests.
  - `index.ts`: Entry point for AI utilities.

- **`/app`**  
  - Implements the Next.js **App Router** structure.
  - **`(auth)`** → Handles authentication flows (login, registration, and NextAuth API).
  - **`(chat)`** → Manages AI chat functionalities.
  - **API Routes (`route.ts`)** → Handle AI interactions, chat history, and file uploads.

- **`/components`**  
  - **`custom/`** → Reusable app-specific components (e.g., chat UI, navbar, theme toggle).
  - **`flights/`** → Legacy flight-related components (likely will be removed).
  - **`ui/`** → General UI components like buttons, inputs, modals, etc.

- **`/db`**  
  - **`schema.ts`** → Defines database structure using **Drizzle ORM**.
  - **`queries.ts`** → Database queries.
  - **`migrate.ts`** → Handles database migrations.

- **`/lib`**  
  - Contains utility functions.
  - **Drizzle (ORM) migrations and metadata stored here.**

- **`/public`**  
  - Stores **static assets** like fonts and images.

---

### **2. Configuration Files**
- **`next.config.mjs`** → Configures Next.js settings.
- **`tailwind.config.ts`** → Tailwind CSS configuration.
- **`drizzle.config.ts`** → ORM configuration.
- **`middleware.ts`** → API middleware for authentication and request handling.
- **`postcss.config.mjs`** → CSS processing configuration.
- **`tsconfig.json`** → TypeScript settings.
- **`package.json`** → Project dependencies and scripts.

---

## **Key Takeaways**
- We are using **Next.js (App Router)** for a modular, server-rendered architecture.
- The **AI SDK** powers natural language processing (LLMs like Gemini/OpenAI).
- **Drizzle ORM** with **Vercel Postgres** for structured database management.
- **Vercel Blob** for file uploads (PDFs, text, audio).
- **NextAuth.js** for secure authentication.
- **Tailwind CSS + shadcn/ui** for UI components.


